Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example:

Given the array [-2,1,-3,4,-1,2,1,-5,4],

the contiguous subarray [4,-1,2,1] has the largest sum = 6.

For this problem, return the maximum sum.



public class Solution {
	// DO NOT MODFIY THE LIST. 
	public int maxSubArray(final List<Integer> A) {
	    int j,i,max = 0, maxTillHere = 0,allnegative=0,minNegative;
	        if(A.size()==0){
	            return 0;
	        }
	       minNegative = A.get(0);
	       for(j = 0; j < A.size(); j++){
	            if(A.get(j)>0){
	                break;
	            } else {
	                if(A.get(j)>minNegative)
	                    minNegative = A.get(j);
	            }
	        }
	        if(j==A.size())
	            return minNegative;
		   for(i = 0; i < A.size(); i++)
		   {
		     maxTillHere = maxTillHere + A.get(i);
		     if(maxTillHere < 0)
		        maxTillHere = 0;
		     else if(max < maxTillHere)
		        max = maxTillHere;
		    }
		    return max;
	}
}