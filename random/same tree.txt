Given two binary trees, write a function to check if they are equal or not.
Two binary trees are considered equal if they are structurally identical and the nodes have the same value.


Understand the problem:
The problem asks for checking if two trees are equal or not. Two binary trees are considered equal if they are structurally identical and the nodes have the same value.  

Recursive Solution:
Note that for two trees are identical, both each node and the tree structures should be the same. So for each node, we first check if two node values are the same. Then we check both nodes have the same structure for left child and right child. We recursively repeat this process until we traversed all nodes of the tree.


/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        return isSame(p, q);
    }
     
    private boolean isSame(TreeNode p, TreeNode q) {
        if (p == null) return q == null;
        if (q == null) return false;
         
        if (p.val != q.val) return false;
         
        if (isSame(p.left, q.left) == false) return false;
        if (isSame(p.right, q.right) == false) return false;
         
        return true;
    }
}