Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 
Return the sum of the three integers. 
You may assume that each input would have exactly one solution.

Example: 
given array S = {-1 2 1 -4}, 
and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)


public class Solution {
	public int threeSumClosest(ArrayList<Integer> A, int B) {
	    int closestSum = A.get(0) + A.get(1) + A.get(2);
        int difference = Math.abs(closestSum - B);
        
        Collections.sort(A);
        
        for (int i=0;i<A.size()-2;i++) {
            int second=i+1;
            int third=A.size()-1;
            while(second<third) {
                int newSum = A.get(i)+A.get(second)+A.get(third);
                int newDifference = Math.abs(newSum-B);
                if (newDifference < difference) {
                    difference = newDifference;
                    closestSum = newSum;
                }
                if (newSum < B)
                    second++;
                else
                    third--;
            }
        }
        return closestSum;
	}
}
